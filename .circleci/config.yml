version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  node: circleci/node@4.1.0
  sonarcloud: sonarsource/sonarcloud@1.0.2
 # jira: circleci/jira@1.2.2
  newman: postman/newman@0.0.2
  #cypress: datacamp/cypress@0.0.7
  percy: percy/agent@0.1.2

nightly:
     triggers:
       - schedule:
           - cron: "0 7 * * *"
           - cron: "0 20 * * *"
                 
           
jobs:
 
  
  sonar_test:
        docker:
           - image: 'node:latest'
        steps:
           - checkout
           - sonarcloud/scan
 
  newman-collection-run:
    executor: newman/postman-newman-docker
    steps:
      - checkout
      - newman/newman-run:
          collection: ./CircleCitest.postman_collection.json
 
  cache-dependencies:
    machine: # executor type
            image: ubuntu-1604:201903-01 
    
    steps:
      - save_cache:
          key: my-cache
          paths:
            - test/example.js
 
      
      
          
            
    
           
  
  test_3:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - node/install-packages:
          
          override-ci-command: npm install
      - run:
          name: Install unitjs
          command: npm install unit.js
      - run:   
          command: npm install --save-dev jest
      - run:
          command: npm run test
      - slack/status:
                failure_message: Test-3 Failed
                success_message: Test -3 Success
  
  test_2:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - node/install-packages:
          
          override-ci-command: npm install
      - run:
          name: Install jest
          command: npm install --save-dev jest
      - run:   
          command: npm run test
      
      - slack/status:
                failure_message: Test-2 Failed
                success_message: Test-2 Success
               

         
  
  
  
  
  post_test:
     docker:
      - image: circleci/openjdk:stretch
     steps:
      - checkout
      - run:
          name: Install curl
          command: sudo apt install curl
      - run:   
          command: curl -Is http://www.google.com | head -n 1
      - slack/status:
                failure_message: Post-test Failed
                success_message: Post-test Success
  
  deploy:
        machine: # executor type
            image: ubuntu-1604:201903-01

        steps:
            - checkout
            - run:
               name: install
               command: mvn -s .circleci.settings.xml -DskipTests deploy
            - slack/status:
                failure_message: Deployment Failed
                success_message: Deployment Success
      

        

  test_1:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Giving permissions
          command: chmod +x mvnw
      - run:   
          command: ./mvnw test
      - slack/status:
                failure_message: Test-1 Failed
                success_message: Test-1 Success

  build:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Giving permissions
          command: chmod +x mvnw
      - run:   
          command: ./mvnw -Dmaven.test.skip=true package
      - store_artifacts:
                path: /artifact/Demo1-0.0.1-20201016.061321-56.jar
      - slack/status:
                failure_message: Build Failed
                success_message: Build Success

workflows:
  version: 2.1

  build-test:
    jobs:
      - build
         # post-steps:
           # - jira/notify
      - cache-dependencies:
          requires:
            - build
            
      
      - test_3:
          requires:
            - build
      - test_2:
          requires:
            - build
      - test_1:
          requires:
            - build
      - percy/finalize_all:
         requires:
           - test_1
           - test_2
           - test_3
      - deploy:
          requires:
            - test_1
            - test_2
            - test_3
      - post_test:
          requires:
            - deploy
          #post-steps:
           # - jira/notify:
                
                #environment_type: production
                #job_type: deployment
               
      - sonar_test:
          requires:
            - post_test
      - newman-collection-run:
          requires:
            - post_test
      
      
